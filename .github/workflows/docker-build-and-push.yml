name: Publish on Docker Hub and Deploy

on:
  push:
    branches:
      - main

jobs:
  build_test_and_pub:
    runs-on: [ubuntu-latest]
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
      APP_NAME: ${{ secrets.APP_NAME }}
      APP_NAMESPACE: ${{ secrets.APP_NAMESPACE }}
    steps:
      - name: Set ENV variables
        run: |
          echo "IMAGE=$LOGIN/$NAME" >> $GITHUB_ENV
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "APP_APP_NAMESPACE=$APP_APP_NAMESPACE" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PWD }}

      - name: Build Docker container
        uses: docker/build-push-action@v2
        with:
          tags: |
            ${{ env.IMAGE }}:currency-helper-latest

      - name: Run tests
        run: docker run -i --rm ${{ env.IMAGE }}:currency-helper-latest pytest

      - name: Push Docker
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.IMAGE }}:currency-helper-latest

      - uses: actions/checkout@v1
      - name: Prep helm chart
        run: |
          mv ./.helm/Chart.yaml ./.helm/Chart.old.yaml &&
          cat ./.helm/Chart.old.yaml | grep -v appVersion > ./.helm/Chart.yaml &&
          echo -e "\r\nappVersion: v${GITHUB_REF##*/}\r\n" >> ./.helm/Chart.yaml &&
          cat ./.helm/Chart.yaml

      - name: Helm deploy
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm upgrade ${{ env.APP_NAME }} ./.helm/ --install --wait --atomic --namespace=${{ env.APP_NAMESPACE }} --set=app.name=${{ env.APP_NAME }} --values=./.helm/values.yaml --set=app.image.repository=${{ env.IMAGE }} --set=app.image.tag=currency-helper-latest pytest
          kubeconfig: '${{ secrets.KUBECONFIG }}'

      - name: Workflow results notification
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notification_title: '{workflow} has {status_message}'
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>'
          footer: 'Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>'
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
